name: release
on:
  release:
    types: [created]
env:
  ARCHIVE_NAME: ${{ github.event.repository.name }}-${{ github.event.release.tag_name }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: download-source
        run: curl -sL "${{ github.event.release.tarball_url }}" >"$ARCHIVE_NAME".tar.gz
      - name: unzip-source
        run: mkdir "$ARCHIVE_NAME" && tar -xzf "$ARCHIVE_NAME".tar.gz -C "$ARCHIVE_NAME" --strip-components 1
      - name: check-version
        run: '[[ $("$ARCHIVE_NAME"/k1s -v) = "${{ github.event.release.tag_name }}" ]]'
      - if: failure() 
        name: delete-release
        run: 'curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.event.repository.full_name }}/releases/${{ github.event.release.id }}"'
      - if: failure()
        name: delete-tag
        run: 'curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.event.repository.full_name }}/git/refs/tags/${{ github.event.release.tag_name }}"'
#        if: failure() 
#        run:
#        uses: author/action-rollback@stable
#        with:
#          id: ${{ github.event.release.id}}
#          tag: ${{ github.event.release.tag_name }}
  upload-archive:
    needs: check-version
    runs-on: ubuntu-latest
    steps:
      - name: download-source
        run: curl -sL "${{ github.event.release.tarball_url }}" >"$ARCHIVE_NAME".tar.gz
      - name: unzip-source
        run: mkdir "$ARCHIVE_NAME" && tar -xzf "$ARCHIVE_NAME".tar.gz -C "$ARCHIVE_NAME" --strip-components 1
      - name: clean-source
        run: rm -rf "$ARCHIVE_NAME"/{.github,assets}
      - name: create-archive
        run: tar -czf "$ARCHIVE_NAME".tar.gz "$ARCHIVE_NAME"
      - name: create-checksum
        run: sha256sum "$ARCHIVE_NAME".tar.gz >checksum.txt
      - name: upload-archive
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.ARCHIVE_NAME }}.tar.gz
          asset_name: ${{ env.ARCHIVE_NAME }}.tar.gz
          asset_content_type: application/gzip
      - name: upload-checksum
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: checksum.txt
          asset_name: checksum.txt
          asset_content_type: text/plain
